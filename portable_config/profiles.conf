# Profiles #
[ontop_playback]
 profile-desc    = 暂停时取消置顶
 profile-cond    = pause
 profile-restore = copy
 ontop           = no
[bt.2100-pq]
profile-cond=get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "pq"
profile-restore=copy
target-trc=pq
target-prim=bt.2020
glsl-shader=~~/shaders/hdr-toys/utils/clip_both.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/pq_to_l.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/l_to_linear.glsl
glsl-shader=~~/shaders/hdr-toys/utils/chroma_correction.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/dynamic.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/jedypod.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/linear_to_bt1886.glsl

[bt.2100-hlg]
profile-cond=get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "hlg"
profile-restore=copy
target-trc=hlg
target-prim=bt.2020
glsl-shader=~~/shaders/hdr-toys/utils/clip_both.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/hlg_to_l.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/l_to_linear.glsl
glsl-shader=~~/shaders/hdr-toys/utils/chroma_correction.glsl
glsl-shader=~~/shaders/hdr-toys/tone-mapping/dynamic.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/jedypod.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/linear_to_bt1886.glsl

[bt.2020]
profile-cond=get("video-params/primaries") == "bt.2020" and get("video-params/gamma") == "bt.1886"
profile-restore=copy
target-trc=bt.1886
target-prim=bt.2020
glsl-shader=~~/shaders/hdr-toys/transfer-function/bt1886_to_linear.glsl
glsl-shader=~~/shaders/hdr-toys/gamut-mapping/jedypod.glsl
glsl-shader=~~/shaders/hdr-toys/transfer-function/linear_to_bt1886.glsl


[interlaced]
profile-cond=deinterlace or (get("video-frame-info/interlaced") and not deinterlace)
profile-restore=copy-equal
deinterlace

[low-res]
profile-cond=width * height <= 1280 * 720
profile-restore=copy-equal
glsl-shaders-pre=~~/shaders/nlmeans.glsl

# [high-res]
# profile-cond=width * height >= 3840 * 2160
# profile-restore=copy-equal

[short]
profile-cond=duration <= 60 and get("current-tracks/video/image") == false
profile-restore=copy-equal
save-position-on-quit=no
loop-file=inf

[audio]
profile-cond=aid and not get("current-tracks/video/albumart") == false
profile-restore=copy-equal
prefetch-playlist

[image]
profile-cond=get("current-tracks/video/image")
profile-restore=copy-equal
script-opts-append=inputevent-configs=input.conf,~~/input.image.conf

[gray]
profile-cond=get("video-params/pixelformat") == "gray"
profile-restore=copy-equal
dscale=gaussian
glsl-shaders=

[idle]
profile-cond=idle_active
profile-restore=copy-equal
script-opts-append=inputevent-configs=input.conf,~~/input.idle.conf

#[background]
#profile-cond=not focused and get("current-tracks/video/albumart") == false
#profile-restore=copy-equal
#pause

[end]
profile-cond=eof_reached
profile-restore=copy-equal
fullscreen=no
window-maximized=no
[Anime]
profile-cond=require 'mp.utils'.join_path(working_directory, path):match('\\Anime\\') ~= nil
deband=yes
deband-iterations=2 
deband-threshold=35 
deband-range=20 
deband-grain=5

sub-scale=0.6

## Hides webtorrent entries in memo script which would otherwise causes issues ## 

script-opts-append=memo-enabled=yes

[Webtorrent-entries]
profile-cond=string.match(string.lower(string.gsub(require "mp.utils".join_path(get("working-directory", ""), get("path", "")), string.gsub(get("filename", ""), "([^%w])", "%%%1").."$", "")), "webtorrent")~=nil
profile-restore=copy-equal
script-opts-append=memo-enabled=no
